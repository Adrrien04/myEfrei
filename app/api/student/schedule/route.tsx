import { NextRequest, NextResponse } from "next/server";
import postgres from "postgres";
import jwt from "jsonwebtoken";

const sql = postgres(process.env.POSTGRES_URL!, { ssl: { rejectUnauthorized: false } });

export async function GET(req: NextRequest) {
    try {
        const authHeader = req.headers.get("Authorization");
        console.log("üîç En-t√™te Authorization re√ßu :", authHeader);

        if (!authHeader || !authHeader.startsWith("Bearer ")) {
            console.log("‚ùå Aucun token trouv√© dans les en-t√™tes, utilisateur non connect√©.");
            return NextResponse.json({ error: "Utilisateur non connect√©" }, { status: 401 });
        }

        const token = authHeader.split(" ")[1];
        console.log("üîë Token extrait :", token);

        let decoded;
        try {
            decoded = jwt.verify(token, process.env.AUTH_SECRET!) as any;
            console.log("‚úÖ Token d√©cod√© :", decoded);
        } catch (error) {
            console.log("‚ùå Token invalide :", error);
            return NextResponse.json({ error: "Token invalide" }, { status: 401 });
        }

        if (!decoded.email || !decoded.numeroetudiant) {
            console.log("‚ùå Donn√©es manquantes dans le token.");
            return NextResponse.json({ error: "Donn√©es utilisateur manquantes" }, { status: 401 });
        }

        console.log("üü¢ R√©cup√©ration de l'emploi du temps pour :", decoded.email, decoded.numeroetudiant);

        const [student] = await sql`
            SELECT emploi_du_temps FROM eleves WHERE numeroetudiant = ${decoded.numeroetudiant}
        `;

        if (!student) {
            console.log("‚ùå √âtudiant non trouv√© pour le num√©ro :", decoded.numeroetudiant);
            return NextResponse.json({ error: "√âtudiant non trouv√©" }, { status: 404 });
        }

        console.log("üìå Emploi du temps r√©cup√©r√© :", student.emploi_du_temps);

        return NextResponse.json({ emploi_du_temps: student.emploi_du_temps || "Aucun cours pr√©vu" });
    } catch (error) {
        console.error("‚ùå Erreur GET /api/student/schedule :", error);
        return NextResponse.json({ error: "Erreur lors de la r√©cup√©ration de l'emploi du temps" }, { status: 500 });
    }
}